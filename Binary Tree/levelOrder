class Solution {
    
    public List<List<Integer>> levelOrder(TreeNode root) {
       
      Queue<TreeNode> queue = new LinkedList<TreeNode>();
        List<List<Integer>> wrapList = new LinkedList <List<Integer>>();
        
        if(root == null) return wrapList;
        
        queue.offer(root);
        while(!queue.isEmpty()){
            List<Integer> temp = new LinkedList <Integer>();
            int size = queue.size();
            while(size-- != 0){
            if(queue.peek().left != null) 
                queue.offer(queue.peek().left);
                
            if(queue.peek().right != null) 
                queue.offer(queue.peek().right);
                
            temp.add(queue.poll().val);
            }
            wrapList.add(temp);
        }
        return wrapList;
    
}
}